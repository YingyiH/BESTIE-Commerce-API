version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports: 
      - "2181"
    hostname: zookeeper
    volumes:
      - zookeeper_db:/opt/zookeeper-3.4.13/data
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: 35.235.112.242 # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://35.235.112.242:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - docker_sock_db:/var/run/docker.sock
      - kafka_db:/kafka/kafka-logs
    depends_on:
      - "zookeeper"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 10s
      retries: 5

  db:
    image: mysql:5.7
    # image: mariadb:10.6.4-focal
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=storage_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
    # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
    # Opens port 3306 on the container
      - '3306'
    # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql

  storage:
    # build: ../Storage
    image: yingyi123/storage:storageImage
    ports:
      - "8090:8090"
    # Add environment and volumes for config
    environment: 
      - TARGET_ENV=test
    volumes:
      - /home/yhe/config/storage:/config
    depends_on:
      - db
      - kafka

  receiver:
    # build: ../Receiver
    image: yingyi123/receiver:receiverImage
    ports: 
      - "8080:8080"
    # Add environment and volumes for config
    environment: 
      - TARGET_ENV=test
    volumes:
      - /home/yhe/config/receiver:/config
    depends_on:
      kafka:
          condition: service_healthy

  
  processing:
    # build: ../Processing
    image: yingyi123/processing:processingImage
    network_mode: "host"
    # Add environment and volumes for config
    environment: 
      - TARGET_ENV=test
    volumes:
      - /home/yhe/config/processing:/config
    depends_on:
      - storage

  audit:
    build: ../Audit
    ports:
      - "8110:8110"
    # Add environment and volumes for config
    environment: 
      - TARGET_ENV=test
    volumes:
      - /home/yhe/config/audit_log:/config
    depends_on:
      kafka:
          condition: service_healthy

  dashboard:
    image: dashboard
    build: ../dashboard_ui/Sample_Code
    ports:
      - "3000:3000"
    depends_on:
      - processing
      - audit
      
# Names our volume
volumes:
  my-db:
  zookeeper_db:
  kafka_db:
  docker_sock_db: