version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports: 
      - "2181"
    hostname: zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: ec2-35-85-82-248.us-west-2.compute.amazonaws.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://ec2-35-85-82-248.us-west-2.compute.amazonaws.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    # image: mariadb:10.6.4-focal
    restart: always
    environment:
      # MYSQL_DATABASE: 'events'
      # # So you don't have to use root, but you can if you like
      # MYSQL_USER: 'user'
      # # You can use whatever password you like
      # MYSQL_PASSWORD: 'password'
      # # Password for root access
      # MYSQL_ROOT_PASSWORD: 'password'
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=storage_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
    # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
    # Opens port 3306 on the container
      - '3306'
    # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql

  storage:
    build: ../Storage
    network_mode: "host"
    ports:
      - "8090:8090"
    depends_on:
      - db
      - kafka

  receiver:
    build: ../Receiver
    ports: 
      - "8080:8080"
    depends_on:
      - kafka
  
  processing:
    build: ../Processing
    network_mode: "host"
    ports:
      - "8100:8100"
    depends_on:
      - kafka

  audit:
    build: ../Audit
    ports:
      - "8110:8110"
      
# Names our volume
volumes:
  my-db: